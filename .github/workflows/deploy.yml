name: Deploy Next.js site to Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "23.3.0"
          cache: npm

      - name: Check Node and npm versions
        run: |
          echo "Node.js version:"
          node --version
          echo "npm version:"
          npm --version
          echo "Platform info:"
          uname -a
          echo "Environment variables:"
          env | grep NODE || echo "No NODE env vars"

      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          static_site_generator: next

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-

      - name: Install dependencies
        run: |
          # Clean install with locked versions
          npm ci --no-audit --no-fund

      - name: Clean previous builds
        run: |
          # Remove any conflicting config files
          rm -f next.config.js
          rm -rf .next out

          # Ensure we have the right config file
          if [ ! -f "next.config.ts" ]; then
            echo "‚ùå next.config.ts missing!"
            exit 1
          fi
          echo "‚úÖ Using next.config.ts"

      - name: Build with Next.js
        run: |
          # Set environment variables for better error reporting
          export NODE_ENV=production
          export NEXT_TELEMETRY_DISABLED=1

          echo "üìù Starting Next.js build..."
          echo "Config file check:"
          ls -la next.config.*

          # Try the build
          npm run build || {
            echo "‚ùå Build failed, investigating..."
            echo "Checking Next.js version:"
            npx next --version
            echo "Checking Tailwind CSS:"
            npm list tailwindcss || echo "Tailwind not found"
            echo "Build directory contents:"
            ls -la .next/ || echo ".next directory not found"
            exit 1
          }

          echo "‚úÖ Build completed successfully"
          echo "Checking for out directory..."
          if [ -d "./out" ]; then
            echo "‚úÖ out directory created successfully"
            echo "Contents:"
            ls -la ./out | head -10
          else
            echo "‚ùå out directory not created by build"
            echo "Checking .next directory:"
            ls -la .next/ || echo ".next not found"
            echo "Checking if this is an export build:"
            grep -i "export" next.config.ts || echo "export not found in config"
          fi

      - name: Check if out directory exists
        run: |
          if [ -d "./out" ]; then
            echo "‚úÖ out directory exists"
            ls -la ./out
          else
            echo "‚ùå out directory does not exist"
            echo "Available directories:"
            ls -la ./
            exit 1
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
